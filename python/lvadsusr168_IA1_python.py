# -*- coding: utf-8 -*-
"""LVADSUSR168.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dC9LTxA1to2-MujwDzGQgis-WQnW0YMJ
"""

#1
length = float(input('Enter length of the property in meters:'))
width = float(input('Enter width of the property in meters:'))

#assuming property is either a square or rectangle

area = length*width

print('The area of the property is:',str(area)+'meters^2.')

if area < 1600:
  print('The property size is small')
elif area < 10000:
  print('The property size is medium')
else:
  print('The property size is Large')

#2
weight = float(input('Enter weight in kg:'))
height = float(input('Enter height in cms:'))

BMI = round((weight/(height*height))*10000,2)

print('Your BMI is',str(BMI))

#3
student_grades = dict({})

def add_grade(name,grade_list):
  student_grades[name]=grade_list

def get_record(name):
  print('The grades corresponding to',name,'are',str(student_grades[name]))

def update_record(name,subject_index,updated_grade):
  student_grades[name][subject_index]=updated_grade


add_grade('Mahesh',[99,100,98])

#4
print('Welcome to the our streaming app')
age = int(input('Enter your age:'))

print(age)

#5
subscriber_ids = [x for x in range(1,101)]

even_subscriber_ids = [y for y in subscriber_ids if (y % 2) == 0 ]

print(even_subscriber_ids)

#6
stored_password = 'fnifbrsrkjfn93ue'

while True:
  password = input('Please enter the password:')
  if password != stored_password:
    password = input('!!Please enter the correct password:')
  else:
    print('password matched! you may enter....')
    break

#7
survey_data = [2,6,7,9,10,1,1,2,5,6,8,9,0]
def avg_score(reviews: list):

  return sum(reviews)/len(reviews)

avg_rating = avg_score(reviews=survey_data)
print(avg_rating)

#8

def vowel_count(comment):
  comment= comment.lower()
  res = 0
  res = comment.count('a')
  res = res + comment.count('e')
  res = res + comment.count('i')
  res = res + comment.count('o')
  res = res + comment.count('u')

  return res

vowel_count('aaaeeeebbbbbb')

#9
import datetime
upcoming_plans = {datetime.date(2024,4,22):'Python IA1', datetime.date(2024,4,23):'Python IA2'}

def remainders(dat):
  keys = list(upcoming_plans.keys())

  if dat==datetime.date(2024,4,22):
    print('You have an event called',upcoming_plans[dat],'today')
  elif dat==datetime.date(2024,4,23):
    print('You have an event called',upcoming_plans[dat],'tmrw')

remainders(dat=datetime.date(2024,4,22))

#10
p = float(input('Enter principal amount:'))
r = float(input('Enter interest rate:'))
t = float(input('Enter time period:'))

try:
  si = (p*r*t)/100
except:
  print('An exception occured')

print(si)

#11
user_ids = [x for x in range(1,11)]

polling_data = dict({})

for i in range(len(user_ids)):
  polling_data[user_ids[i]]=None
#lets assume four parties whose symbols are a,b,c,d
def enter_and_ensure_polling_data(user_id):
  party = input('Enter party symbol a/b/c/d:')

  if party=='a' or party=='b' or party=='c' or party=='d':
    polling_data[user_id] = party



enter_and_ensure_polling_data(1)
enter_and_ensure_polling_data(2)

print(polling_data)

#12
a = float(input('Enter the first value:'))
b = float(input('Enter the second value:'))

def add(a,b):
  return a+b
def sub(a,b):
  return a-b
def mul(a,b):
  return a*b
def div(a,b):
  try:
    return a/b
  except:
    b = float(input('Please enter a valid value for b except 0:'))
    return a/b

div(a,b)

#13
with open('logfile.txt','x') as f:
  for i in range(1,11):
    text = "today is day"+str(i)+" of reporting\n"
    f.write(text)

#14

with open('logfile.txt','r') as f:
  f.read()

#15

