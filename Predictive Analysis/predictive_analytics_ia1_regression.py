# -*- coding: utf-8 -*-
"""predictive_analytics_ia1_regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/133XSNNLFFXu-FafE-ccOOPtNEkb_gRTz
"""

#1
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/expenses.csv')
df.head()

# Plot bar charts for categorical columns
for column in df.select_dtypes(include=['object']).columns:
    plt.figure(figsize=(10, 5))
    df[column].value_counts().plot(kind='bar')
    plt.title(f'Bar Chart of {column}')
    plt.xlabel(column)
    plt.ylabel('Count')
    plt.show()

for column in df.select_dtypes(include=['float64', 'int64']).columns:
    plt.figure(figsize=(10, 5))
    sns.histplot(df[column])
    plt.title(f'Histogram of {column}')
    plt.xlabel(column)
    plt.ylabel('Frequency')
    plt.show()

df.dropna(inplace=True)

print(df.shape)

print(df.columns)

from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()

cols = ['sex','smoker', 'region']
for col in cols:
  df[col] = label_encoder.fit_transform(df[col])

X = df.drop('charges',axis=1)
y = pd.DataFrame(df['charges'])

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler(copy=True,with_mean=True,with_std=True)
X = scaler.fit_transform(X)
scaler = StandardScaler(copy=True,with_mean=True,with_std=True)
y = scaler.fit_transform(y)
y = pd.DataFrame(y)

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)

from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(X_train,y_train)

y_pred = model.predict(X_test)

from sklearn.metrics import mean_absolute_error,mean_squared_error,r2_score
mae = mean_absolute_error(y_test,y_pred)
mse = mean_squared_error(y_test,y_pred)
r2 = r2_score(y_test,y_pred)
print(mae,mse,r2)



#2



































