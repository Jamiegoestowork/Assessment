# -*- coding: utf-8 -*-
"""Anamoly_final_exam.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W-Nm0_ziMEXurqW43zybx5GnypOQeJwj
"""

#Anamolies Isolation Forest

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.ensemble import IsolationForest
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import DBSCAN

df = pd.read_csv('/content/anomaly_train.csv')
df

#EDA
df.shape

df.info()

df.describe()

df = df.drop('TransactionID',axis=1)

#Duplicates
print(df.shape)
print(df.duplicated().sum())
df=df.drop_duplicates()
print(df.shape)

#missingvalues
print(df.isna().sum())

#nullvalues

for i in df.select_dtypes(include='object'):
  df[i]=df[i].fillna(df[i].mode()[0])
for i in df.select_dtypes(include=['int64','float64']):
  df[i]=df[i].fillna(df[i].mean())

print(df.isna().sum())

cols = list(df.columns)

#Encoding
cols = df.select_dtypes(include='object')
label_encoder = LabelEncoder()
for col in cols:
    df[col] = label_encoder.fit_transform(df[col])

df.head()

#Normalization
scaler = StandardScaler()
X = scaler.fit_transform(df)

model = IsolationForest(random_state=42,contamination=0.05)
model.fit(X)

outlier_preds = model.predict(X)
outlier_preds

plt.figure(figsize=(8, 6))
plt.scatter(X[:, 0], X[:, 1], c=outlier_preds, marker='o', cmap=plt.cm.coolwarm)
plt.title('Anamoly Detection')
plt.grid(True)
plt.colorbar()
plt.show()

import seaborn as sns

# Create a pairplot
sns.pairplot(pd.DataFrame(X), diag_kind='kde')
plt.show()